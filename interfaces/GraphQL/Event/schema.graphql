extend type Query {
  events(archived: Boolean): EventConnection
}

enum MEDIA_TYPE {
  VIDEO
  IMAGE
  OTHER
}

enum SHOWTIME_STATUS {
  SOLD_OUT
  EXPIRED
  UPCOMING
  ON_SALE
}

enum TICKET_QUALITY_FILTER = {
  BEST
  BETTER
  GOOD
  ANY
}

enum TICKET_PRICE_FILTER = {
  ANY
  CHEAP
}

type Event {
  id: ID!
  showtimes: ShowtimeConnection
  venue: Venue
  entertainers: EntertainerConnection
  title: String!
  summary: String
  description: String
  priceRange: String!
  pricingTiers: [ PricingTier ]
  type: String!
  rating: String!
  images: MediaConnection
  videos: MediaConnection
}

type Media implements Node {
  id: ID!
  url: Url!
  type: MEDIA_TYPE!
}

type Showtime implements Node {
  id: ID!
  datetime: DateTime!
  priceRange: String!
  tickets(price: TICKET_PRICE_FILTER, quality: TICKET_QUALITY_FILTER): TicketConnection!
  status: SHOWTIME_STATUS!
}

